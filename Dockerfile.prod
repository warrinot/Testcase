## BUILDER

# pull official base image
FROM python:3.8.3-alpine as builder


# set work directory
WORKDIR /usr/src/testcase

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install psycopg2 dependencies
RUN apk update \
    && apk add postgresql-dev gcc python3-dev musl-dev make

# lint
RUN pip install --upgrade pip
RUN pip install flake8
COPY . .
RUN flake8 --ignore=E501,F401 .

# install dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/testcase/wheels -r requirements.txt


## FINAL

# pull official base image
FROM python:3.8.3-alpine

# create directory for the app user
RUN mkdir -p /home/testcase

# create the app user
RUN addgroup -S testcase && adduser -S testcase -G testcase

# create the appropirate directories
ENV HOME=/home/testcase
ENV APP_HOME=/home/testcase/web
RUN mkdir $APP_HOME

WORKDIR $APP_HOME

# install dependencies
RUN apk update && apk add libpq
COPY --from=builder /usr/src/testcase/wheels /wheels
COPY --from=builder /usr/src/testcase/requirements.txt .
RUN pip install --no-cache /wheels/*


COPY ./entrypoint.prod.sh $APP_HOME

COPY . $APP_HOME
RUN mkdir $APP_HOME/testcase/static

# chown all the files to the app user
RUN chown -R testcase:testcase $APP_HOME

USER testcase

ENTRYPOINT ["/home/testcase/web/entrypoint.prod.sh"]